{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "87aeea34",
   "metadata": {},
   "source": [
    "### What is an API?\n",
    "\n",
    "An `API` (application Programming Interface) - is a server that we can use to **retrieve** and **send** data to using `code`. APIs are most commonly used to retrieve data.\n",
    "\n",
    "When we want to **receive** data from an `API`, we need to make a `request`. \n",
    "\n",
    "Requests are used all over the web. For instance, when you visit a blog post, your web browser makes a request to a web server, which responds with the content of the web page.\n",
    "\n",
    "API examples:\n",
    "\n",
    "- https://swapi.dev/\n",
    "- https://developers.facebook.com/\n",
    "- https://learn.microsoft.com/en-us/graph/use-the-api\n",
    "- https://developer.tomtom.com/\n",
    "- https://cloud.google.com/translate/docs/reference/rest\n",
    "- https://developers.google.com/calendar/api/guides/overview"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecad4f51",
   "metadata": {},
   "source": [
    "<img src=\"img/api.png\" width=\"450\" style=\"float:left; margin-right:100px;\" />"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3a489e0",
   "metadata": {},
   "source": [
    "### API documentations\n",
    "\n",
    "- serves as a guide for developers on how to **interact** with an API.\n",
    "- It provides information about the available `endpoints`, `parameters`, and `expected responses`.\n",
    "\n",
    "\n",
    "- explains the `purpose` and `functionality` of each endpoint.\n",
    "- It helps developers understand the `structure` and `format` of the data exchanged.\n",
    "\n",
    "\n",
    "- often includes `code examples` and `tutorials` for using the API.\n",
    "- It may outline `authentication methods` and `requirements` for accessing the API.\n",
    "\n",
    "\n",
    "- Documentation assists developers in `integrating` the API into their applications.\n",
    "- It helps developers stay updated on any changes or `updates` to the API.\n",
    "- API documentation improves collaboration between API providers and developers.\n",
    "\n",
    "\n",
    "### Types of API requests\n",
    "\n",
    "- `GET`: Retrieves data or resources from the server.\n",
    "- `POST`: Submits data to be processed by the server.\n",
    "- `PUT`: Updates existing data or resources on the server.\n",
    "- `DELETE`: Removes data or resources from the server.\n",
    "- `PATCH`: Partially updates data or resources on the server.\n",
    "- `HEAD`: Retrieves metadata or headers from the server.\n",
    "- `OPTIONS`: Retrieves the supported methods and capabilities of the server.\n",
    "- `TRACE`: Echoes back the received request to the client for diagnostic purposes.\n",
    "- `CONNECT`: Establishes a network connection to a server over HTTPS.\n",
    "    \n",
    "    \n",
    "### Request Status (Response codes)\n",
    "\n",
    "- A response from the API comes with a `response code`.  \n",
    "- The code tells us whether our request was successful or not. \n",
    "- Common response codes:\n",
    "\n",
    "        - 200 OK: Request successful, and the server returned the requested data.\n",
    "        - 201 Created: Request successful, and a new resource was created on the server.\n",
    "        - 204 No Content: Request successful, but there is no content to return.\n",
    "        - 301 Redirecting: The server is redirecting you to a different endpoint.\n",
    "        - 400 Bad Request: Request couldn't be understood or had missing parameters.\n",
    "        - 401 Unauthorized: Authentication is required with valid credentials.\n",
    "        - 403 Forbidden: Request is understood but not allowed due to authorization.\n",
    "        - 404 Not Found: Requested resource couldn't be found.\n",
    "        - 405 Method Not Allowed: Requested method is not allowed for the resource.\n",
    "        - 500 Internal Server Error: Unexpected error occurred on the server.\n",
    "        - 503 Service Unavailable: Server is temporarily unable to handle the request."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7caab31e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "200\n"
     ]
    }
   ],
   "source": [
    "# example \n",
    "\n",
    "import requests, json\n",
    "\n",
    "try:\n",
    "    response = requests.get(\"https://swapi.dev/api/people/1/\")\n",
    "    print(response.status_code)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"An error occurred during the API request: \\n\\n\",e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b8250dc5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'name': 'C-3PO',\n",
       " 'height': '167',\n",
       " 'mass': '75',\n",
       " 'hair_color': 'n/a',\n",
       " 'skin_color': 'gold',\n",
       " 'eye_color': 'yellow',\n",
       " 'birth_year': '112BBY',\n",
       " 'gender': 'n/a',\n",
       " 'homeworld': 'https://swapi.dev/api/planets/1/',\n",
       " 'films': ['https://swapi.dev/api/films/1/',\n",
       "  'https://swapi.dev/api/films/2/',\n",
       "  'https://swapi.dev/api/films/3/',\n",
       "  'https://swapi.dev/api/films/4/',\n",
       "  'https://swapi.dev/api/films/5/',\n",
       "  'https://swapi.dev/api/films/6/'],\n",
       " 'species': ['https://swapi.dev/api/species/2/'],\n",
       " 'vehicles': [],\n",
       " 'starships': [],\n",
       " 'created': '2014-12-10T15:10:51.357000Z',\n",
       " 'edited': '2014-12-20T21:17:50.309000Z',\n",
       " 'url': 'https://swapi.dev/api/people/2/'}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# example \n",
    "\n",
    "import requests, json\n",
    "\n",
    "try:\n",
    "    response = requests.get(\"https://swapi.dev/api/people/2/\")\n",
    "    parse_json = json.loads(response.content)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"An error occurred during the API request: \\n\\n\",e)\n",
    "    \n",
    "    \n",
    "parse_json"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6fd12ef0",
   "metadata": {},
   "source": [
    "### Popular APIs from FAANG\n",
    "\n",
    "#### Microsoft:\n",
    "\n",
    "- `Microsoft Graph API`: Enables developers to access data and functionality across Microsoft 365 services, such as Outlook, OneDrive, SharePoint, and more.\n",
    "- `Azure Cognitive Services`: Offers a range of AI-powered APIs for computer vision, natural language processing, speech recognition, and other intelligent services.\n",
    "- `Azure Maps API`: Provides geospatial APIs for mapping, routing, geocoding, and traffic data.\n",
    "- `Azure Text Analytics API`: Allows developers to extract key phrases, sentiment analysis, and language detection from text data.\n",
    "\n",
    "#### Google:\n",
    "\n",
    "- `Google Maps API`: Offers mapping services, geocoding, directions, and places search functionality.\n",
    "- `Google Places API`: Enables developers to access information about places, including details, reviews, photos, and user ratings.\n",
    "- `Google Cloud Translation API`: Provides language detection and translation services.\n",
    "- `Google Cloud Vision API`: Offers image recognition capabilities, including label detection, OCR, and face detection.\n",
    "- `Google Calendar API`: Allows developers to integrate with Google Calendar and create, modify, or delete events.\n",
    "\n",
    "\n",
    "#### Facebook:\n",
    "\n",
    "- `Facebook Graph API`: Enables developers to interact with Facebook's social graph, access user data, post updates, and perform various actions on behalf of users.\n",
    "- `Facebook Login API`: Allows developers to implement Facebook login functionality in their applications.\n",
    "- `Facebook Messenger API`: Provides access to messaging features, allowing developers to build chatbots and integrate with Facebook Messenger.\n",
    "- `Instagram Graph API`: Offers access to Instagram's media and user data, enabling developers to retrieve, upload, and interact with content on Instagram."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55fa2666",
   "metadata": {},
   "source": [
    "### Making API Requests in Python\n",
    "\n",
    "\n",
    "In order to work with APIs in Python, we need `tools` that will make requests. \n",
    "\n",
    "\n",
    "\n",
    "`requests` library:\n",
    "\n",
    "    - the most common library for making requests and working with APIs in python. \n",
    "    - isnâ€™t part of the standard Python library (need to install it).\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4b9c2daf",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "200\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import json\n",
    "response_API = requests.get('https://api.covid19india.org/state_district_wise.json')\n",
    "print(response_API.status_code)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e54f4bfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'notes': 'District-wise numbers are out-dated as cumulative counts for each district are not reported in bulletin',\n",
       " 'active': 19,\n",
       " 'confirmed': 51,\n",
       " 'migratedother': 0,\n",
       " 'deceased': 0,\n",
       " 'recovered': 32,\n",
       " 'delta': {'confirmed': 0, 'deceased': 0, 'recovered': 0}}"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get the data from API\n",
    "data = response_API.text\n",
    "\n",
    "# Parse the data into JSON format\n",
    "parse_json = json.loads(data)\n",
    "parse_json\n",
    "\n",
    "# Extract the data and print it\n",
    "\n",
    "parse_json['Andaman and Nicobar Islands']['districtData']['South Andaman']"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
